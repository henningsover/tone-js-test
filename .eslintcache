[{"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/reportWebVitals.js":"1","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/App.js":"2","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/index.js":"3","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/Synthesizer.jsx":"4","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/song.js":"5","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/InputsSection.jsx":"6","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/contexts/SynthContextProvider.jsx":"7","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/SynthInputsContainer.jsx":"8","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/inputsHelper.js":"9","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/data/InstrumentKit.js":"10","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/constants.js":"11"},{"size":362,"mtime":1612174836245,"results":"12","hashOfConfig":"13"},{"size":3854,"mtime":1612710155474,"results":"14","hashOfConfig":"13"},{"size":625,"mtime":1612272325227,"results":"15","hashOfConfig":"13"},{"size":3897,"mtime":1612613331227,"results":"16","hashOfConfig":"13"},{"size":4032,"mtime":1612611889823,"results":"17","hashOfConfig":"13"},{"size":4467,"mtime":1612708912915,"results":"18","hashOfConfig":"13"},{"size":1055,"mtime":1612706962811,"results":"19","hashOfConfig":"13"},{"size":1254,"mtime":1612539057477,"results":"20","hashOfConfig":"13"},{"size":496,"mtime":1612707526821,"results":"21","hashOfConfig":"13"},{"size":2416,"mtime":1612710541282,"results":"22","hashOfConfig":"13"},{"size":380,"mtime":1612610427019,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1e7syce",{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/reportWebVitals.js",[],["50","51"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/App.js",["52","53","54","55","56","57"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/index.js",[],["58","59"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/Synthesizer.jsx",["60","61","62","63"],"import React, { useEffect, useContext } from 'react';\nimport { SynthContext } from './contexts/SynthContextProvider';\nimport Instrument from './data/InstrumentKit';\nimport * as Tone from 'tone';\n\nexport default function Synthesizer({ patterns, oscTypes }) {\n  const { setCurrentPattern, currentPattern, setCurrentStep, currentStep, songMode } = useContext(SynthContext);\n\n  useEffect(() => {\n    // Tone.Transport.bpm.value = 120;\n    const inst1 = new Instrument();\n    const inst2 = new Instrument();\n    const inst3 = new Instrument();\n    const inst4 = new Instrument();\n    const instruments = [inst1, inst2, inst3, inst4];\n\n    instruments.forEach((intrument, i) => {\n      console.log(oscTypes[`synth${i + 1}`]);\n      intrument.updateSynthType(oscTypes[`synth${i + 1}`]);\n    });\n    // Object.keys(oscTypes).forEach((type, i) => {\n    //   instruments[i].updateOscillatorType(oscTypes[type]);\n    // });\n\n    // instruments[0].updateOscillatorType(oscTypes.synth1);\n    // instruments[1].updateOscillatorType(oscTypes.synth2);\n    // instruments[2].updateOscillatorType(oscTypes.synth3);\n    // instruments[3].updateOscillatorType(oscTypes.synth4);\n\n    // const gain = new Tone.Gain(0.6);\n    // instruments.forEach((synth) => synth.connect(gain));\n\n    // gain.toDestination();\n\n    let patternIndex = currentPattern;\n    let stepIndex = 0;\n    setCurrentStep(stepIndex);\n\n    const getLength = (next, pattern) => {\n      let counter = 0;\n      for (let i = next; i < pattern.length; i++) {\n        if (pattern[i] !== '') {\n          break;\n        }\n        counter++;\n      }\n      switch (counter) {\n        case 1:\n          return '16n';\n        case 2:\n          return '8n + 16n';\n        case 3:\n          return '4n';\n        case 4:\n          return '4n + 16n';\n        case 5:\n          return '4n + 8n';\n        case 6:\n          return '4n + 8n + 16n';\n        case 7:\n          return '2n';\n        default:\n          return '16n';\n      }\n    };\n\n    const getPattern = (index) => {\n      switch (index) {\n        case 0:\n          return patterns.synth1[patternIndex];\n        case 1:\n          return patterns.synth2[patternIndex];\n        case 2:\n          return patterns.synth3[patternIndex];\n        case 3:\n          return patterns.synth4[patternIndex];\n        default:\n          break;\n      }\n    };\n\n    const repeat = (time) => {\n      if (stepIndex === 0) {\n        setCurrentPattern(patternIndex);\n        setCurrentStep(stepIndex);\n      }\n      instruments.forEach((instrument, index) => {\n        const pattern = getPattern(index);\n        const note = pattern[stepIndex];\n        const instrumentType = instrument.synth.name;\n        if (instrumentType === 'NoiseSynth') {\n          if (note !== '') {\n            console.log(instrumentType);\n            instrument.updatePercussionType(note);\n            instrument.synth.triggerAttackRelease('16n', time);\n          }\n        }\n        if (instrumentType === 'Synth') {\n          if (note !== 'X' && note !== '') {\n            instrument.synth.triggerRelease(time);\n            instrument.synth.triggerAttack(note, time + 0.01);\n          }\n          if (note === 'X') {\n            instrument.synth.triggerRelease(time);\n          }\n        }\n      });\n      if (stepIndex < patterns.synth1[0].length - 1) {\n        setCurrentStep(stepIndex);\n        stepIndex++;\n      } else {\n        if (songMode) {\n          patternIndex++;\n        }\n        setCurrentStep(stepIndex);\n        stepIndex = 0;\n      }\n      if (patterns.synth1[patternIndex] === undefined) {\n        patternIndex = 0;\n      }\n    };\n\n    Tone.Transport.scheduleRepeat((time) => {\n      repeat(time);\n    }, '16n');\n\n    Tone.Transport.start();\n\n    return () => {\n      Tone.Transport.stop();\n      Tone.Transport.cancel();\n      instruments.forEach((instrument) => instrument.synth.dispose());\n    };\n  }, []);\n  return null;\n}\n","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/song.js",[],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/InputsSection.jsx",[],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/contexts/SynthContextProvider.jsx",["64"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/SynthInputsContainer.jsx",["65","66","67"],"import React, { useContext, useEffect, useState } from 'react';\nimport { SynthContext } from '../contexts/SynthContextProvider';\nimport '../App.css';\n\nexport default function SynthInputsContainer({ id, pattern, onChangeHandler }) {\n  const { isPlaying, currentStep } = useContext(SynthContext);\n  let inputs;\n  const synthToUpdate = id.replace('Inputs', '');\n\n  useEffect(() => {\n    inputs = document.getElementById(id).querySelectorAll('input');\n    if (currentStep !== null) {\n      inputs.forEach((input) => {\n        input.classList.remove('current-pattern');\n      });\n      inputs[currentStep].classList.add('current-pattern');\n    } else {\n      inputs.forEach((input) => {\n        input.classList.remove('current-pattern');\n      });\n    }\n  }, [currentStep]);\n\n  return (\n    <div id={id} style={{ display: 'flex', flexDirection: 'column' }}>\n      {pattern.map((note, index) => {\n        return (\n          <input\n            key={index}\n            value={note}\n            className=\"synth-input\"\n            //TODO Handle input as piano keys\n            // onKeyDown={(e) => onChangeHandler(e, index, synthToUpdate)}\n            onChange={(e) => onChangeHandler(e, index, synthToUpdate)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/inputsHelper.js",["68"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/data/InstrumentKit.js",["69"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/constants.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":7,"column":13,"nodeType":"76","messageId":"77","endLine":7,"endColumn":17},{"ruleId":"74","severity":1,"message":"79","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":18},{"ruleId":"74","severity":1,"message":"80","line":18,"column":5,"nodeType":"76","messageId":"77","endLine":18,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":98,"column":6,"nodeType":"83","endLine":98,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":104,"column":6,"nodeType":"83","endLine":104,"endColumn":22,"suggestions":"86"},{"ruleId":"70","replacedBy":"87"},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","severity":1,"message":"89","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"80","line":7,"column":62,"nodeType":"76","messageId":"77","endLine":7,"endColumn":73},{"ruleId":"74","severity":1,"message":"90","line":39,"column":11,"nodeType":"76","messageId":"77","endLine":39,"endColumn":20},{"ruleId":"81","severity":1,"message":"91","line":134,"column":6,"nodeType":"83","endLine":134,"endColumn":8,"suggestions":"92"},{"ruleId":"74","severity":1,"message":"93","line":1,"column":42,"nodeType":"76","messageId":"77","endLine":1,"endColumn":51},{"ruleId":"74","severity":1,"message":"94","line":1,"column":40,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"95","line":6,"column":11,"nodeType":"76","messageId":"77","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"96","line":11,"column":14,"nodeType":"97","endLine":11,"endColumn":67},{"ruleId":"74","severity":1,"message":"89","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"89","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'song1' is defined but never used.","Identifier","unusedVar","'Tone' is defined but never used.","'Instrument' is defined but never used.","'currentStep' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSong'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'song'. Either include it or remove the dependency array.",["101"],["98"],["99"],"'React' is defined but never used.","'getLength' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPattern', 'oscTypes', 'patterns.synth1', 'patterns.synth2', 'patterns.synth3', 'patterns.synth4', 'setCurrentPattern', 'setCurrentStep', and 'songMode'. Either include them or remove the dependency array.",["102"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'isPlaying' is assigned a value but never used.","Assignments to the 'inputs' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [setSong]",{"range":"109","text":"110"},"Update the dependencies array to be: [currentPattern, song]",{"range":"111","text":"112"},"Update the dependencies array to be: [currentPattern, oscTypes, patterns.synth1, patterns.synth2, patterns.synth3, patterns.synth4, setCurrentPattern, setCurrentStep, songMode]",{"range":"113","text":"114"},[2445,2447],"[setSong]",[2577,2593],"[currentPattern, song]",[3875,3877],"[currentPattern, oscTypes, patterns.synth1, patterns.synth2, patterns.synth3, patterns.synth4, setCurrentPattern, setCurrentStep, songMode]"]