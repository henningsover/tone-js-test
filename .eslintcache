[{"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/reportWebVitals.js":"1","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/App.js":"2","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/index.js":"3","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/Synthesizer.jsx":"4","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/song.js":"5","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/InputsSection.jsx":"6","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/contexts/SynthContextProvider.jsx":"7","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/SynthInputsContainer.jsx":"8","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/inputsHelper.js":"9"},{"size":362,"mtime":1612174836245,"results":"10","hashOfConfig":"11"},{"size":2886,"mtime":1612470093887,"results":"12","hashOfConfig":"11"},{"size":625,"mtime":1612272325227,"results":"13","hashOfConfig":"11"},{"size":2998,"mtime":1612469396169,"results":"14","hashOfConfig":"11"},{"size":6378,"mtime":1612470004827,"results":"15","hashOfConfig":"11"},{"size":3168,"mtime":1612479561262,"results":"16","hashOfConfig":"11"},{"size":868,"mtime":1612466088422,"results":"17","hashOfConfig":"11"},{"size":1030,"mtime":1612479098306,"results":"18","hashOfConfig":"11"},{"size":496,"mtime":1612477835457,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e7syce",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/reportWebVitals.js",[],["42","43"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/App.js",["44","45","46","47","48"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/index.js",[],["49","50"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/Synthesizer.jsx",["51","52","53","54","55"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/song.js",[],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/InputsSection.jsx",["56"],"import React, { useState, useEffect, useContext } from 'react';\nimport { SynthContext } from '../contexts/SynthContextProvider';\nimport SynthInputsContainer from './SynthInputsContainer';\nimport { getNote } from './inputsHelper';\n\nexport default function InputsSection() {\n  const { currentPattern, song, setSong } = useContext(SynthContext);\n\n  const [synth1Pattern, setSynth1Pattern] = useState(song.patterns.synth1[currentPattern]);\n  const [synth2Pattern, setSynth2Pattern] = useState(song.patterns.synth2[currentPattern]);\n  const [synth3Pattern, setSynth3Pattern] = useState(song.patterns.synth3[currentPattern]);\n  const [synth4Pattern, setSynth4Pattern] = useState(song.patterns.synth4[currentPattern]);\n\n  const handleSynth1Inputs = (e, index, synth) => {\n    e.preventDefault();\n    const charCode = e.code;\n    const target = e.target;\n    const stepValue = getNote(charCode, 4);\n    if (charCode === 'ArrowUp') {\n      target.previousSibling.focus();\n    }\n    if (charCode === 'ArrowDown') {\n      target.nextSibling.focus();\n    }\n    if (stepValue !== undefined) {\n      const updatedPattern = [...synth1Pattern];\n      updatedPattern[index] = stepValue;\n      const updatedSong = { ...song };\n      updatedSong.patterns.synth1[currentPattern] = updatedPattern;\n      setSong(updatedSong);\n      setSynth1Pattern(song.patterns.synth1[currentPattern]);\n    }\n  };\n  const handleSynth2Inputs = (e, index) => {\n    e.preventDefault();\n    const updatedPattern = [...synth2Pattern];\n    updatedPattern[index] = e.target.value.toUpperCase();\n    song.patterns.synth2[currentPattern] = updatedPattern;\n    setSynth2Pattern(song.patterns.synth2[currentPattern]);\n  };\n  const handleSynth3Inputs = (e, index) => {\n    e.preventDefault();\n    const updatedPattern = [...synth3Pattern];\n    updatedPattern[index] = e.target.value.toUpperCase();\n    song.patterns.synth3[currentPattern] = updatedPattern;\n    setSynth3Pattern(song.patterns.synth3[currentPattern]);\n  };\n  const handleSynth4Inputs = (e, index) => {\n    e.preventDefault();\n    const updatedPattern = [...synth4Pattern];\n    updatedPattern[index] = e.target.value.toUpperCase();\n    song.patterns.synth4[currentPattern] = updatedPattern;\n    setSynth4Pattern(song.patterns.synth4[currentPattern]);\n  };\n\n  useEffect(() => {\n    setSynth1Pattern(song.patterns.synth1[currentPattern]);\n    setSynth2Pattern(song.patterns.synth2[currentPattern]);\n    setSynth3Pattern(song.patterns.synth3[currentPattern]);\n    setSynth4Pattern(song.patterns.synth4[currentPattern]);\n  }, [currentPattern]);\n\n  return (\n    <>\n      {song && (\n        <section style={{ display: 'flex', flexDirection: 'row' }}>\n          <SynthInputsContainer id={'synth1Inputs'} pattern={synth1Pattern} onChangeHandler={handleSynth1Inputs} />\n          <SynthInputsContainer id={'synth2Inputs'} pattern={synth2Pattern} onChangeHandler={handleSynth2Inputs} />\n          <SynthInputsContainer id={'synth3Inputs'} pattern={synth3Pattern} onChangeHandler={handleSynth3Inputs} />\n          <SynthInputsContainer id={'synth4Inputs'} pattern={synth4Pattern} onChangeHandler={handleSynth4Inputs} />\n        </section>\n      )}\n    </>\n  );\n}\n","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/contexts/SynthContextProvider.jsx",["57"],"/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/SynthInputsContainer.jsx",["58","59","60"],"import React, { useContext, useEffect, useState } from 'react';\nimport { SynthContext } from '../contexts/SynthContextProvider';\nimport '../App.css';\n\nexport default function SynthInputsContainer({ id, pattern, onChangeHandler }) {\n  const { isPlaying, currentStep } = useContext(SynthContext);\n  let inputs;\n  const synthToUpdate = id.replace('Inputs', '');\n\n  useEffect(() => {\n    inputs = document.getElementById(id).querySelectorAll('input');\n    if (currentStep !== null) {\n      inputs.forEach((input) => {\n        input.classList.remove('current-pattern');\n      });\n      inputs[currentStep].classList.add('current-pattern');\n    } else {\n      inputs.forEach((input) => {\n        input.classList.remove('current-pattern');\n      });\n    }\n  }, [currentStep]);\n\n  return (\n    <div id={id} style={{ display: 'flex', flexDirection: 'column' }}>\n      {pattern.map((note, index) => {\n        return <input key={index} value={note} onKeyDown={(e) => onChangeHandler(e, index, synthToUpdate)} />;\n      })}\n    </div>\n  );\n}\n","/Users/andreashenningson/Develop/Exjobb/tone-js-1/src/components/inputsHelper.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":15},{"ruleId":"66","severity":1,"message":"70","line":16,"column":5,"nodeType":"68","messageId":"69","endLine":16,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":60,"column":6,"nodeType":"73","endLine":60,"endColumn":8,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":70,"column":6,"nodeType":"73","endLine":70,"endColumn":22,"suggestions":"76"},{"ruleId":"66","severity":1,"message":"77","line":72,"column":9,"nodeType":"68","messageId":"69","endLine":72,"endColumn":13},{"ruleId":"62","replacedBy":"78"},{"ruleId":"64","replacedBy":"79"},{"ruleId":"66","severity":1,"message":"80","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":6,"column":62,"nodeType":"68","messageId":"69","endLine":6,"endColumn":73},{"ruleId":"66","severity":1,"message":"81","line":26,"column":11,"nodeType":"68","messageId":"69","endLine":26,"endColumn":20},{"ruleId":"66","severity":1,"message":"82","line":79,"column":17,"nodeType":"68","messageId":"69","endLine":79,"endColumn":21},{"ruleId":"71","severity":1,"message":"83","line":112,"column":6,"nodeType":"73","endLine":112,"endColumn":8,"suggestions":"84"},{"ruleId":"71","severity":1,"message":"85","line":61,"column":6,"nodeType":"73","endLine":61,"endColumn":22,"suggestions":"86"},{"ruleId":"66","severity":1,"message":"87","line":1,"column":42,"nodeType":"68","messageId":"69","endLine":1,"endColumn":51},{"ruleId":"66","severity":1,"message":"88","line":1,"column":40,"nodeType":"68","messageId":"69","endLine":1,"endColumn":48},{"ruleId":"66","severity":1,"message":"89","line":6,"column":11,"nodeType":"68","messageId":"69","endLine":6,"endColumn":20},{"ruleId":"71","severity":1,"message":"90","line":11,"column":14,"nodeType":"91","endLine":11,"endColumn":67},{"ruleId":"66","severity":1,"message":"80","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'song1' is defined but never used.","Identifier","unusedVar","'currentStep' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSong'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'song'. Either include it or remove the dependency array.",["95"],"'test' is assigned a value but never used.",["92"],["93"],"'React' is defined but never used.","'getLength' is assigned a value but never used.","'next' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPattern', 'oscTypes.synth1', 'oscTypes.synth2', 'oscTypes.synth3', 'oscTypes.synth4', 'patterns.synth1', 'patterns.synth2', 'patterns.synth3', 'patterns.synth4', 'setCurrentPattern', 'setCurrentStep', and 'songMode'. Either include them or remove the dependency array.",["96"],"React Hook useEffect has missing dependencies: 'song.patterns.synth1', 'song.patterns.synth2', 'song.patterns.synth3', and 'song.patterns.synth4'. Either include them or remove the dependency array.",["97"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'isPlaying' is assigned a value but never used.","Assignments to the 'inputs' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [setSong]",{"range":"106","text":"107"},"Update the dependencies array to be: [currentPattern, song]",{"range":"108","text":"109"},"Update the dependencies array to be: [currentPattern, oscTypes.synth1, oscTypes.synth2, oscTypes.synth3, oscTypes.synth4, patterns.synth1, patterns.synth2, patterns.synth3, patterns.synth4, setCurrentPattern, setCurrentStep, songMode]",{"range":"110","text":"111"},"Update the dependencies array to be: [currentPattern, song.patterns.synth1, song.patterns.synth2, song.patterns.synth3, song.patterns.synth4]",{"range":"112","text":"113"},[1395,1397],"[setSong]",[1585,1601],"[currentPattern, song]",[2976,2978],"[currentPattern, oscTypes.synth1, oscTypes.synth2, oscTypes.synth3, oscTypes.synth4, patterns.synth1, patterns.synth2, patterns.synth3, patterns.synth4, setCurrentPattern, setCurrentStep, songMode]",[2538,2554],"[currentPattern, song.patterns.synth1, song.patterns.synth2, song.patterns.synth3, song.patterns.synth4]"]